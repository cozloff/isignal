services:
  react-router:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: react-router
    depends_on:
      - netcore
    environment:
      - VITE_BACKEND_URL=https://netcore
      - VITE_ENVIORNMENT=development
    volumes:
      - /app/node_modules
    develop:
      watch:
        - action: sync
          path: ./frontend/app
          target: /workdir/app
          ignore:
            - node_modules
        - action: rebuild
          path: ./frontend/package.json
    ports: !override
      - 5173:5173
  netcore:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: netcore
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTPS_PORTS=443
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ConnectionStrings__Postgres=${CONNECTION_STRING}
      - EmailConfiguration__From=${SMTP_From}
      - EmailConfiguration__SmtpServer=${SMTP_SmtpServer}
      - EmailConfiguration__Port=${SMTP_Port}
      - EmailConfiguration__Username=${SMTP_Username}
      - EmailConfiguration__Password=${SMTP_Password}
    volumes:
      - ./backend/SNN/https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
      - ./backend/export:/source/export
    develop:
      watch:
        - action: sync
          path: ./backend/SNN
          target: /source
    ports: !override
      - 8000:80
      - 8081:443

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5436:5432"

  loki:
    image: grafana/loki:latest
    container_name: hts-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    container_name: hts-grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"

  # https://github.com/rnwood/smtp4dev/blob/master/docker-compose.yml
  smtp4dev:
    container_name: hts-smtp4dev
    image: rnwood/smtp4dev:latest
    restart: always
    ports:
      - "5000:80"
      - "25:25"
      - "143:143"
    volumes:
      # This is where smtp4dev stores the database..
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__Urls=http://*:80
      - ServerOptions__HostName=smtp4dev

volumes:
  pgdata:
  smtp4dev-data:
