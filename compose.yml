services:
  react-router:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: react-router
    depends_on:
      - netcore
    environment:
      - NODE_ENV=development
    volumes:
      - /app/node_modules
    develop:
      watch:
        - action: sync
          path: ./frontend/app
          target: /workdir/app
          ignore:
            - node_modules
        - action: rebuild
          path: ./frontend/package.json
    ports: !override
      - 5173:5173
  netcore:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: netcore
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTPS_PORTS=443
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ConnectionStrings__Postgres=${CONNECTION_STRING}
    volumes:
      - ./backend/SNN/https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
      - ./backend/export:/source/export
    develop:
      watch:
        - action: sync
          path: ./backend/SNN
          target: /source
    ports: !override
      - 8000:80
      - 8081:443

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5436:5432"

volumes:
  pgdata:
